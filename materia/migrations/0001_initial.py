# Generated by Django 4.2.7 on 2024-02-15 20:22

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.CharField(db_collation='utf8mb3_bin', max_length=10, primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=10)),
                ('created_at', models.IntegerField()),
                ('title', models.CharField(max_length=300)),
                ('file_size', models.IntegerField()),
                ('deleted_at', models.IntegerField()),
                ('is_deleted', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'asset',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AssetData',
            fields=[
                ('id', models.CharField(db_collation='utf8mb3_bin', max_length=10, primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=10)),
                ('status', models.CharField(max_length=20)),
                ('size', models.CharField(max_length=20)),
                ('bytes', models.IntegerField()),
                ('hash', models.CharField(max_length=255)),
                ('created_at', models.IntegerField()),
                ('data', models.TextField()),
            ],
            options={
                'db_table': 'asset_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DateRange',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('semester', models.CharField(max_length=255)),
                ('year', models.IntegerField()),
                ('start_at', models.IntegerField()),
                ('end_at', models.IntegerField()),
            ],
            options={
                'db_table': 'date_range',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('play_id', models.CharField(db_collation='utf8mb3_bin', max_length=100)),
                ('type', models.CharField(blank=True, max_length=26, null=True)),
                ('item_id', models.CharField(max_length=255)),
                ('text', models.TextField()),
                ('value', models.CharField(max_length=255)),
                ('created_at', models.IntegerField()),
                ('game_time', models.IntegerField()),
                ('visible', models.CharField(max_length=1)),
                ('ip', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LogActivity',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.PositiveBigIntegerField()),
                ('type', models.CharField(max_length=255)),
                ('created_at', models.IntegerField()),
                ('item_id', models.CharField(db_collation='utf8mb3_bin', max_length=100)),
                ('value_1', models.CharField(blank=True, max_length=255, null=True)),
                ('value_2', models.CharField(blank=True, max_length=255, null=True)),
                ('value_3', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'log_activity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LogPlay',
            fields=[
                ('id', models.CharField(db_collation='utf8mb3_bin', max_length=100, primary_key=True, serialize=False)),
                ('inst_id', models.CharField(db_collation='utf8mb3_bin', max_length=10)),
                ('is_valid', models.CharField(max_length=1)),
                ('created_at', models.IntegerField()),
                ('user_id', models.PositiveBigIntegerField()),
                ('ip', models.CharField(max_length=20)),
                ('is_complete', models.CharField(max_length=1)),
                ('score', models.DecimalField(decimal_places=2, max_digits=52)),
                ('score_possible', models.IntegerField()),
                ('percent', models.FloatField()),
                ('elapsed', models.IntegerField()),
                ('qset_id', models.IntegerField()),
                ('environment_data', models.TextField()),
                ('auth', models.CharField(max_length=100)),
                ('referrer_url', models.CharField(max_length=255)),
                ('context_id', models.CharField(max_length=255)),
                ('semester', models.PositiveBigIntegerField()),
            ],
            options={
                'db_table': 'log_play',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LogStorage',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('inst_id', models.CharField(db_collation='utf8mb3_bin', max_length=10)),
                ('play_id', models.CharField(db_collation='utf8mb3_bin', max_length=100)),
                ('user_id', models.PositiveBigIntegerField()),
                ('created_at', models.PositiveIntegerField()),
                ('name', models.CharField(max_length=64)),
                ('data', models.TextField()),
            ],
            options={
                'db_table': 'log_storage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Lti',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('item_id', models.CharField(db_collation='utf8mb3_bin', max_length=255)),
                ('resource_link', models.CharField(max_length=255)),
                ('consumer', models.CharField(max_length=255)),
                ('consumer_guid', models.CharField(max_length=255)),
                ('user_id', models.CharField(max_length=255)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('context_id', models.CharField(blank=True, max_length=255, null=True)),
                ('context_title', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.IntegerField()),
                ('updated_at', models.IntegerField()),
            ],
            options={
                'db_table': 'lti',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MapAssetToObject',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('object_id', models.CharField(db_collation='utf8mb3_bin', max_length=255)),
                ('object_type', models.IntegerField()),
                ('asset_id', models.CharField(db_collation='utf8mb3_bin', max_length=10)),
            ],
            options={
                'db_table': 'map_asset_to_object',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MapQuestionToQset',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('qset_id', models.PositiveBigIntegerField()),
                ('question_id', models.PositiveBigIntegerField()),
            ],
            options={
                'db_table': 'map_question_to_qset',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Migration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=25)),
                ('name', models.CharField(max_length=50)),
                ('migration', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'migration',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('from_id', models.PositiveBigIntegerField()),
                ('to_id', models.PositiveBigIntegerField()),
                ('item_type', models.IntegerField()),
                ('item_id', models.CharField(db_collation='utf8mb3_bin', max_length=100)),
                ('is_email_sent', models.CharField(max_length=1)),
                ('created_at', models.IntegerField()),
                ('is_read', models.CharField(max_length=1)),
                ('subject', models.CharField(max_length=511)),
                ('avatar', models.CharField(max_length=511)),
                ('updated_at', models.IntegerField()),
                ('action', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'notification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PermObjectToUser',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('object_id', models.CharField(db_collation='utf8mb3_bin', max_length=10)),
                ('user_id', models.PositiveBigIntegerField()),
                ('perm', models.IntegerField()),
                ('object_type', models.IntegerField()),
                ('expires_at', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'perm_object_to_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PermRoleToPerm',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('role_id', models.PositiveBigIntegerField()),
                ('perm', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'perm_role_to_perm',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PermRoleToUser',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.PositiveBigIntegerField()),
                ('role_id', models.PositiveBigIntegerField()),
            ],
            options={
                'db_table': 'perm_role_to_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PermRoleToUserBackup',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.PositiveBigIntegerField()),
                ('role_id', models.PositiveBigIntegerField()),
            ],
            options={
                'db_table': 'perm_role_to_user_backup',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PollsChoice',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('choice_text', models.CharField(max_length=200)),
                ('votes', models.IntegerField()),
            ],
            options={
                'db_table': 'polls_choice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PollsQuestion',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('question_text', models.CharField(max_length=200)),
                ('pub_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'polls_question',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.PositiveBigIntegerField()),
                ('type', models.CharField(max_length=255)),
                ('text', models.TextField()),
                ('created_at', models.IntegerField()),
                ('data', models.TextField(blank=True, null=True)),
                ('hash', models.CharField(max_length=32, unique=True)),
            ],
            options={
                'db_table': 'question',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sessions',
            fields=[
                ('session_id', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('previous_id', models.CharField(max_length=40, unique=True)),
                ('user_agent', models.TextField()),
                ('ip_hash', models.CharField(max_length=32)),
                ('created', models.PositiveIntegerField()),
                ('updated', models.PositiveIntegerField()),
                ('payload', models.TextField()),
            ],
            options={
                'db_table': 'sessions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserExtraAttempts',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('inst_id', models.CharField(db_collation='utf8mb3_bin', max_length=100)),
                ('user_id', models.PositiveBigIntegerField()),
                ('created_at', models.IntegerField()),
                ('extra_attempts', models.IntegerField()),
                ('context_id', models.CharField(max_length=255)),
                ('semester', models.PositiveBigIntegerField()),
            ],
            options={
                'db_table': 'user_extra_attempts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserMeta',
            fields=[
                ('user_id', models.PositiveBigIntegerField(primary_key=True, serialize=False)),
                ('meta', models.CharField(max_length=255)),
                ('value', models.TextField()),
            ],
            options={
                'db_table': 'user_meta',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('role_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'user_role',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=50)),
                ('first', models.CharField(max_length=100)),
                ('last', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=255)),
                ('last_login', models.PositiveIntegerField()),
                ('created_at', models.PositiveIntegerField()),
                ('password', models.CharField(max_length=255)),
                ('login_hash', models.CharField(max_length=255)),
                ('profile_fields', models.TextField()),
                ('updated_at', models.PositiveIntegerField()),
                ('group', models.IntegerField()),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Widget',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.PositiveIntegerField()),
                ('flash_version', models.PositiveIntegerField()),
                ('height', models.PositiveSmallIntegerField()),
                ('width', models.PositiveSmallIntegerField()),
                ('is_scalable', models.CharField(max_length=1)),
                ('score_module', models.CharField(max_length=100)),
                ('score_type', models.CharField(max_length=13)),
                ('is_qset_encrypted', models.CharField(max_length=1)),
                ('is_answer_encrypted', models.CharField(max_length=1)),
                ('is_storage_enabled', models.CharField(max_length=1)),
                ('is_editable', models.CharField(max_length=1)),
                ('is_playable', models.CharField(max_length=1)),
                ('is_scorable', models.CharField(max_length=1)),
                ('in_catalog', models.CharField(max_length=1)),
                ('creator', models.CharField(max_length=255)),
                ('clean_name', models.CharField(max_length=255)),
                ('player', models.CharField(max_length=255)),
                ('api_version', models.IntegerField()),
                ('package_hash', models.CharField(db_collation='utf8mb3_bin', max_length=32)),
                ('score_screen', models.CharField(max_length=255)),
                ('restrict_publish', models.CharField(max_length=1)),
                ('creator_guide', models.CharField(max_length=255)),
                ('player_guide', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'widget',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WidgetInstance',
            fields=[
                ('id', models.CharField(db_collation='utf8mb3_bin', max_length=10, primary_key=True, serialize=False)),
                ('widget_id', models.PositiveBigIntegerField()),
                ('user_id', models.PositiveBigIntegerField()),
                ('created_at', models.IntegerField()),
                ('name', models.CharField(max_length=100)),
                ('is_draft', models.CharField(max_length=1)),
                ('height', models.IntegerField()),
                ('width', models.IntegerField()),
                ('open_at', models.IntegerField()),
                ('close_at', models.IntegerField()),
                ('attempts', models.IntegerField()),
                ('is_deleted', models.CharField(max_length=1)),
                ('guest_access', models.CharField(max_length=1)),
                ('is_student_made', models.CharField(max_length=1)),
                ('updated_at', models.IntegerField()),
                ('embedded_only', models.CharField(max_length=1)),
                ('published_by', models.PositiveBigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'widget_instance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WidgetMetadata',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('widget_id', models.PositiveBigIntegerField()),
                ('name', models.CharField(max_length=255)),
                ('value', models.TextField()),
            ],
            options={
                'db_table': 'widget_metadata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WidgetQset',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('inst_id', models.CharField(db_collation='utf8mb3_bin', max_length=10)),
                ('created_at', models.IntegerField()),
                ('data', models.TextField()),
                ('version', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'widget_qset',
                'managed': False,
            },
        ),
    ]
